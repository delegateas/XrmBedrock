//------------------------------------------------------------------------------
// <auto-generated>
//     Denne kode blev oprettet ved hjælp af et værktøj.
//     Runtime-version:4.0.30319.42000
//
//     Ændringer af denne fil kan resultere i ukorrekt funktion, og ændringerne mistes, hvis
//     koden oprettes igen.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace XrmBedrock.SharedContext {
    
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: User</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        [DisplayName("Access Mode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(128)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(128)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(128)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(64)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(1024)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(1024)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(1024)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(40)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(128)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(64)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Other City")]
        [MaxLength(128)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Other Address")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Other Country/Region")]
        [MaxLength(128)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(128)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Other Street 1")]
        [MaxLength(1024)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Other Street 2")]
        [MaxLength(1024)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Other Street 3")]
        [MaxLength(1024)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(40)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Other ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Other State/Province")]
        [MaxLength(128)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        [DisplayName("Application ID")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        [DisplayName("Application ID URI")]
        [MaxLength(1024)]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object ID")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was set as soft deleted in Azure.</para>
        /// <para>Display Name: Azure Deleted On</para>
        /// </summary>
        [AttributeLogicalName("azuredeletedon")]
        [DisplayName("Azure Deleted On")]
        public DateTime? AzureDeletedOn {
            get {
                return GetAttributeValue<DateTime?>("azuredeletedon");
            }
        }
        
        /// <summary>
        /// <para>Azure state of user</para>
        /// <para>Display Name: Azure State</para>
        /// </summary>
        [AttributeLogicalName("azurestate")]
        [DisplayName("Azure State")]
        public SystemUser_AzureState? AzureState {
            get {
                return GetOptionSetValue<SystemUser_AzureState>("azurestate");
            }
            set {
                SetOptionSetValue("azurestate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        [DisplayName("License Type")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        [DisplayName("Default Filters Populated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        [DisplayName("Default OneDrive for Business Folder Name")]
        [MaxLength(200)]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>User delete state</para>
        /// <para>Display Name: Deleted State</para>
        /// </summary>
        [AttributeLogicalName("deletedstate")]
        [DisplayName("Deleted State")]
        public SystemUser_DeletedState? DeletedState {
            get {
                return GetOptionSetValue<SystemUser_DeletedState>("deletedstate");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        [DisplayName("Display in Service Views")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        [DisplayName("User Name")]
        [MaxLength(1024)]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(100)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(256)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(100)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        [DisplayName("Unique user identity id")]
        [Range(-2147483648, 2147483647)]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        [DisplayName("Invitation Status")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Bypasses the selected user from IP firewall restriction</para>
        /// <para>Display Name: To bypass IP firewall restriction on the user</para>
        /// </summary>
        [AttributeLogicalName("isallowedbyipfirewall")]
        [DisplayName("To bypass IP firewall restriction on the user")]
        public bool? IsAllowedByIpFirewall {
            get {
                return GetAttributeValue<bool?>("isallowedbyipfirewall");
            }
            set {
                SetAttributeValue("isallowedbyipfirewall", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Status")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        [DisplayName("Integration user mode")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        [DisplayName("User Licensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        [DisplayName("User Synced")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(256)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        [DisplayName("Mobile Alert Email")]
        [MaxLength(100)]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        [DisplayName("Mobile Offline Profile")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(64)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(50)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        [DisplayName("Manager")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        [DisplayName("Passport Hi")]
        [Range(0, 1000000000)]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        [DisplayName("Passport Lo")]
        [Range(0, 1000000000)]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        [DisplayName("Photo URL")]
        [MaxLength(200)]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        [DisplayName("Position")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        [DisplayName("Preferred Address")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        [DisplayName("Preferred Email")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        [DisplayName("Preferred Phone")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(20)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        [DisplayName("Restricted Access Mode")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        [DisplayName("SharePoint Email Address")]
        [MaxLength(1024)]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Site at which the user is located.</para>
        /// <para>Display Name: Site</para>
        /// </summary>
        [AttributeLogicalName("siteid")]
        [DisplayName("Site")]
        public EntityReference SiteId {
            get {
                return GetAttributeValue<EntityReference>("siteid");
            }
            set {
                SetAttributeValue("siteid", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        [DisplayName("Skills")]
        [MaxLength(100)]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>The type of user</para>
        /// <para>Display Name: System Managed User Type</para>
        /// </summary>
        [AttributeLogicalName("systemmanagedusertype")]
        [DisplayName("System Managed User Type")]
        public SystemUser_SystemManagedUserType? SystemManagedUserType {
            get {
                return GetOptionSetValue<SystemUser_SystemManagedUserType>("systemmanagedusertype");
            }
            set {
                SetOptionSetValue("systemmanagedusertype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the territory to which the user is assigned.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(128)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        [DisplayName("User License Type")]
        [Range(-2147483648, 2147483647)]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        [DisplayName("User PUID")]
        [MaxLength(100)]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        [DisplayName("Windows Live ID")]
        [MaxLength(1024)]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        [DisplayName("Yammer Email")]
        [MaxLength(200)]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        [DisplayName("Yammer User ID")]
        [MaxLength(128)]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(64)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(200)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(64)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(50)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user - Application user or Bot application user</para>
        /// <para>Display Name: User type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_agentType")]
        [DisplayName("User type")]
        public SystemUser_msdyn_AgentType? msdyn_AgentType {
            get {
                return GetOptionSetValue<SystemUser_msdyn_AgentType>("msdyn_agentType");
            }
            set {
                SetOptionSetValue("msdyn_agentType", value);
            }
        }
        
        /// <summary>
        /// <para>Application ID of the bot.</para>
        /// <para>Display Name: Bot application ID</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botapplicationid")]
        [DisplayName("Bot application ID")]
        [MaxLength(100)]
        public string msdyn_BotApplicationId {
            get {
                return GetAttributeValue<string>("msdyn_botapplicationid");
            }
            set {
                SetAttributeValue("msdyn_botapplicationid", value);
            }
        }
        
        /// <summary>
        /// <para>BOT User Description</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botdescription")]
        [DisplayName("Description")]
        public string msdyn_BotDescription {
            get {
                return GetAttributeValue<string>("msdyn_botdescription");
            }
            set {
                SetAttributeValue("msdyn_botdescription", value);
            }
        }
        
        /// <summary>
        /// <para>Bot User Endpoint</para>
        /// <para>Display Name: Endpoint</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botendpoint")]
        [DisplayName("Endpoint")]
        [MaxLength(100)]
        public string msdyn_BotEndpoint {
            get {
                return GetAttributeValue<string>("msdyn_botendpoint");
            }
            set {
                SetAttributeValue("msdyn_botendpoint", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the type of bot</para>
        /// <para>Display Name: Bot Provider</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botprovider")]
        [DisplayName("Bot Provider")]
        public SystemUser_msdyn_BotProvider? msdyn_BotProvider {
            get {
                return GetOptionSetValue<SystemUser_msdyn_BotProvider>("msdyn_botprovider");
            }
            set {
                SetOptionSetValue("msdyn_botprovider", value);
            }
        }
        
        /// <summary>
        /// <para>Bot User Secret Keys</para>
        /// <para>Display Name: Secret Keys</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botsecretkeys")]
        [DisplayName("Secret Keys")]
        [MaxLength(100)]
        public string msdyn_BotSecretKeys {
            get {
                return GetAttributeValue<string>("msdyn_botsecretkeys");
            }
            set {
                SetAttributeValue("msdyn_botsecretkeys", value);
            }
        }
        
        /// <summary>
        /// <para>Capacity associated with the User.</para>
        /// <para>Display Name: Capacity</para>
        /// </summary>
        [AttributeLogicalName("msdyn_capacity")]
        [DisplayName("Capacity")]
        [Range(0, 2147483647)]
        public int? msdyn_Capacity {
            get {
                return GetAttributeValue<int?>("msdyn_capacity");
            }
            set {
                SetAttributeValue("msdyn_capacity", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Presence associated with User.</para>
        /// <para>Display Name: Default Presence</para>
        /// </summary>
        [AttributeLogicalName("msdyn_defaultpresenceiduser")]
        [DisplayName("Default Presence")]
        public EntityReference msdyn_DefaultPresenceIdUser {
            get {
                return GetAttributeValue<EntityReference>("msdyn_defaultpresenceiduser");
            }
            set {
                SetAttributeValue("msdyn_defaultpresenceiduser", value);
            }
        }
        
        /// <summary>
        /// <para>Environment Id of the CDS environment that owns the bot user.</para>
        /// <para>Display Name: Owning Environment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_owningenvironmentid")]
        [DisplayName("Owning Environment Id")]
        [MaxLength(500)]
        public string msdyn_OwningEnvironmentId {
            get {
                return GetAttributeValue<string>("msdyn_owningenvironmentid");
            }
            set {
                SetAttributeValue("msdyn_owningenvironmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user - CRM or BOT user</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_usertype")]
        [DisplayName("Type")]
        public SystemUser_msdyn_UserType? msdyn_UserType {
            get {
                return GetOptionSetValue<SystemUser_msdyn_UserType>("msdyn_usertype");
            }
            set {
                SetOptionSetValue("msdyn_usertype", value);
            }
        }
        
        /// <summary>
        /// <para>Bot handle</para>
        /// <para>Display Name: Bot handle</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bothandle")]
        [DisplayName("Bot handle")]
        [MaxLength(100)]
        public string msdyn_bothandle {
            get {
                return GetAttributeValue<string>("msdyn_bothandle");
            }
            set {
                SetAttributeValue("msdyn_bothandle", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether user is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Field to bind grid wrapper control</para>
        /// <para>Display Name: Grid Wrapper Control field</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gridwrappercontrolfield")]
        [DisplayName("Grid Wrapper Control field")]
        [MaxLength(4000)]
        public string msdyn_gridwrappercontrolfield {
            get {
                return GetAttributeValue<string>("msdyn_gridwrappercontrolfield");
            }
            set {
                SetAttributeValue("msdyn_gridwrappercontrolfield", value);
            }
        }
        
        /// <summary>
        /// <para>Check if swarm is enabled for the experts.</para>
        /// <para>Display Name: Expert Enabled Swarm</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isexpertenabledforswarm")]
        [DisplayName("Expert Enabled Swarm")]
        public bool? msdyn_isexpertenabledforswarm {
            get {
                return GetAttributeValue<bool?>("msdyn_isexpertenabledforswarm");
            }
            set {
                SetAttributeValue("msdyn_isexpertenabledforswarm", value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_DuplicateRules")]
        public IEnumerable<DuplicateRule> SystemUser_DuplicateRules {
            get {
                return GetRelatedEntities<DuplicateRule>("SystemUser_DuplicateRules", null);
            }
            set {
                SetRelatedEntities("SystemUser_DuplicateRules", null, value);
            }
        }
        
        [RelationshipSchemaName("annotation_owning_user")]
        public IEnumerable<Annotation> annotation_owning_user {
            get {
                return GetRelatedEntities<Annotation>("annotation_owning_user", null);
            }
            set {
                SetRelatedEntities("annotation_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_owning_user")]
        public IEnumerable<Contact> contact_owning_user {
            get {
                return GetRelatedEntities<Contact>("contact_owning_user", null);
            }
            set {
                SetRelatedEntities("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public IEnumerable<Account> lk_accountbase_createdby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public IEnumerable<Account> lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public IEnumerable<Account> lk_accountbase_modifiedby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_createdby")]
        public IEnumerable<Annotation> lk_annotationbase_createdby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_createdonbehalfby")]
        public IEnumerable<Annotation> lk_annotationbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_modifiedby")]
        public IEnumerable<Annotation> lk_annotationbase_modifiedby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_modifiedonbehalfby")]
        public IEnumerable<Annotation> lk_annotationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appnotification_createdby")]
        public IEnumerable<appnotification> lk_appnotification_createdby {
            get {
                return GetRelatedEntities<appnotification>("lk_appnotification_createdby", null);
            }
            set {
                SetRelatedEntities("lk_appnotification_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appnotification_createdonbehalfby")]
        public IEnumerable<appnotification> lk_appnotification_createdonbehalfby {
            get {
                return GetRelatedEntities<appnotification>("lk_appnotification_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appnotification_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appnotification_modifiedby")]
        public IEnumerable<appnotification> lk_appnotification_modifiedby {
            get {
                return GetRelatedEntities<appnotification>("lk_appnotification_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_appnotification_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appnotification_modifiedonbehalfby")]
        public IEnumerable<appnotification> lk_appnotification_modifiedonbehalfby {
            get {
                return GetRelatedEntities<appnotification>("lk_appnotification_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appnotification_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public IEnumerable<Contact> lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public IEnumerable<Contact> lk_contactbase_createdby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public IEnumerable<Contact> lk_contactbase_modifiedby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_duplicaterule_createdonbehalfby")]
        public IEnumerable<DuplicateRule> lk_duplicaterule_createdonbehalfby {
            get {
                return GetRelatedEntities<DuplicateRule>("lk_duplicaterule_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_duplicaterule_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_duplicaterule_modifiedonbehalfby")]
        public IEnumerable<DuplicateRule> lk_duplicaterule_modifiedonbehalfby {
            get {
                return GetRelatedEntities<DuplicateRule>("lk_duplicaterule_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_duplicaterule_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_duplicaterulebase_createdby")]
        public IEnumerable<DuplicateRule> lk_duplicaterulebase_createdby {
            get {
                return GetRelatedEntities<DuplicateRule>("lk_duplicaterulebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_duplicaterulebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_duplicaterulebase_modifiedby")]
        public IEnumerable<DuplicateRule> lk_duplicaterulebase_modifiedby {
            get {
                return GetRelatedEntities<DuplicateRule>("lk_duplicaterulebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_duplicaterulebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariabledefinition_createdby")]
        public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_createdby {
            get {
                return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_createdby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariabledefinition_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariabledefinition_createdonbehalfby")]
        public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_createdonbehalfby {
            get {
                return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariabledefinition_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariabledefinition_modifiedby")]
        public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_modifiedby {
            get {
                return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariabledefinition_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariabledefinition_modifiedonbehalfby")]
        public IEnumerable<EnvironmentVariableDefinition> lk_environmentvariabledefinition_modifiedonbehalfby {
            get {
                return GetRelatedEntities<EnvironmentVariableDefinition>("lk_environmentvariabledefinition_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariabledefinition_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariablevalue_createdby")]
        public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_createdby {
            get {
                return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_createdby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariablevalue_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariablevalue_createdonbehalfby")]
        public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_createdonbehalfby {
            get {
                return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariablevalue_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariablevalue_modifiedby")]
        public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_modifiedby {
            get {
                return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariablevalue_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_environmentvariablevalue_modifiedonbehalfby")]
        public IEnumerable<EnvironmentVariableValue> lk_environmentvariablevalue_modifiedonbehalfby {
            get {
                return GetRelatedEntities<EnvironmentVariableValue>("lk_environmentvariablevalue_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_environmentvariablevalue_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoice_createdby")]
        public IEnumerable<mgs_Invoice> lk_mgs_invoice_createdby {
            get {
                return GetRelatedEntities<mgs_Invoice>("lk_mgs_invoice_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoice_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoice_createdonbehalfby")]
        public IEnumerable<mgs_Invoice> lk_mgs_invoice_createdonbehalfby {
            get {
                return GetRelatedEntities<mgs_Invoice>("lk_mgs_invoice_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoice_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoice_modifiedby")]
        public IEnumerable<mgs_Invoice> lk_mgs_invoice_modifiedby {
            get {
                return GetRelatedEntities<mgs_Invoice>("lk_mgs_invoice_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoice_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoice_modifiedonbehalfby")]
        public IEnumerable<mgs_Invoice> lk_mgs_invoice_modifiedonbehalfby {
            get {
                return GetRelatedEntities<mgs_Invoice>("lk_mgs_invoice_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoice_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoicecollection_createdby")]
        public IEnumerable<mgs_InvoiceCollection> lk_mgs_invoicecollection_createdby {
            get {
                return GetRelatedEntities<mgs_InvoiceCollection>("lk_mgs_invoicecollection_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoicecollection_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoicecollection_createdonbehalfby")]
        public IEnumerable<mgs_InvoiceCollection> lk_mgs_invoicecollection_createdonbehalfby {
            get {
                return GetRelatedEntities<mgs_InvoiceCollection>("lk_mgs_invoicecollection_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoicecollection_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoicecollection_modifiedby")]
        public IEnumerable<mgs_InvoiceCollection> lk_mgs_invoicecollection_modifiedby {
            get {
                return GetRelatedEntities<mgs_InvoiceCollection>("lk_mgs_invoicecollection_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoicecollection_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_invoicecollection_modifiedonbehalfby")]
        public IEnumerable<mgs_InvoiceCollection> lk_mgs_invoicecollection_modifiedonbehalfby {
            get {
                return GetRelatedEntities<mgs_InvoiceCollection>("lk_mgs_invoicecollection_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_invoicecollection_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_product_createdby")]
        public IEnumerable<mgs_Product> lk_mgs_product_createdby {
            get {
                return GetRelatedEntities<mgs_Product>("lk_mgs_product_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_product_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_product_createdonbehalfby")]
        public IEnumerable<mgs_Product> lk_mgs_product_createdonbehalfby {
            get {
                return GetRelatedEntities<mgs_Product>("lk_mgs_product_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_product_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_product_modifiedby")]
        public IEnumerable<mgs_Product> lk_mgs_product_modifiedby {
            get {
                return GetRelatedEntities<mgs_Product>("lk_mgs_product_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_product_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_product_modifiedonbehalfby")]
        public IEnumerable<mgs_Product> lk_mgs_product_modifiedonbehalfby {
            get {
                return GetRelatedEntities<mgs_Product>("lk_mgs_product_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_product_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_subscription_createdby")]
        public IEnumerable<mgs_Subscription> lk_mgs_subscription_createdby {
            get {
                return GetRelatedEntities<mgs_Subscription>("lk_mgs_subscription_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_subscription_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_subscription_createdonbehalfby")]
        public IEnumerable<mgs_Subscription> lk_mgs_subscription_createdonbehalfby {
            get {
                return GetRelatedEntities<mgs_Subscription>("lk_mgs_subscription_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_subscription_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_subscription_modifiedby")]
        public IEnumerable<mgs_Subscription> lk_mgs_subscription_modifiedby {
            get {
                return GetRelatedEntities<mgs_Subscription>("lk_mgs_subscription_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_subscription_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_subscription_modifiedonbehalfby")]
        public IEnumerable<mgs_Subscription> lk_mgs_subscription_modifiedonbehalfby {
            get {
                return GetRelatedEntities<mgs_Subscription>("lk_mgs_subscription_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_subscription_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_transaction_createdby")]
        public IEnumerable<mgs_Transaction> lk_mgs_transaction_createdby {
            get {
                return GetRelatedEntities<mgs_Transaction>("lk_mgs_transaction_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_transaction_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_transaction_createdonbehalfby")]
        public IEnumerable<mgs_Transaction> lk_mgs_transaction_createdonbehalfby {
            get {
                return GetRelatedEntities<mgs_Transaction>("lk_mgs_transaction_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_transaction_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_transaction_modifiedby")]
        public IEnumerable<mgs_Transaction> lk_mgs_transaction_modifiedby {
            get {
                return GetRelatedEntities<mgs_Transaction>("lk_mgs_transaction_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_transaction_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mgs_transaction_modifiedonbehalfby")]
        public IEnumerable<mgs_Transaction> lk_mgs_transaction_modifiedonbehalfby {
            get {
                return GetRelatedEntities<mgs_Transaction>("lk_mgs_transaction_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mgs_transaction_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queue_createdonbehalfby")]
        public IEnumerable<Queue> lk_queue_createdonbehalfby {
            get {
                return GetRelatedEntities<Queue>("lk_queue_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queue_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queue_modifiedonbehalfby")]
        public IEnumerable<Queue> lk_queue_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Queue>("lk_queue_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queue_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queuebase_createdby")]
        public IEnumerable<Queue> lk_queuebase_createdby {
            get {
                return GetRelatedEntities<Queue>("lk_queuebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_queuebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queuebase_modifiedby")]
        public IEnumerable<Queue> lk_queuebase_modifiedby {
            get {
                return GetRelatedEntities<Queue>("lk_queuebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_queuebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquery_createdonbehalfby")]
        public IEnumerable<SavedQuery> lk_savedquery_createdonbehalfby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquery_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_savedquery_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquery_modifiedonbehalfby")]
        public IEnumerable<SavedQuery> lk_savedquery_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquery_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_savedquery_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquerybase_createdby")]
        public IEnumerable<SavedQuery> lk_savedquerybase_createdby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquerybase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_savedquerybase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquerybase_modifiedby")]
        public IEnumerable<SavedQuery> lk_savedquerybase_modifiedby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquerybase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_savedquerybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdby")]
        public IEnumerable<Task> lk_task_createdby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public IEnumerable<Task> lk_task_createdonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedby")]
        public IEnumerable<Task> lk_task_modifiedby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public IEnumerable<Task> lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_createdby")]
        public IEnumerable<Template> lk_templatebase_createdby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_createdonbehalfby")]
        public IEnumerable<Template> lk_templatebase_createdonbehalfby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_modifiedby")]
        public IEnumerable<Template> lk_templatebase_modifiedby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_templatebase_modifiedonbehalfby")]
        public IEnumerable<Template> lk_templatebase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Template>("lk_templatebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_templatebase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_primary_user")]
        public IEnumerable<Queue> queue_primary_user {
            get {
                return GetRelatedEntities<Queue>("queue_primary_user", null);
            }
            set {
                SetRelatedEntities("queue_primary_user", null, value);
            }
        }
        
        [AttributeLogicalName("queueid")]
        [RelationshipSchemaName("queue_system_user")]
        public Queue queue_system_user {
            get {
                return GetRelatedEntity<Queue>("queue_system_user", null);
            }
            set {
                SetRelatedEntity("queue_system_user", null, value);
            }
        }
        
        [RelationshipSchemaName("queuemembership_association")]
        public IEnumerable<Queue> queuemembership_association {
            get {
                return GetRelatedEntities<Queue>("queuemembership_association", null);
            }
            set {
                SetRelatedEntities("queuemembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_accounts")]
        public IEnumerable<Account> system_user_accounts {
            get {
                return GetRelatedEntities<Account>("system_user_accounts", null);
            }
            set {
                SetRelatedEntities("system_user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_contacts")]
        public IEnumerable<Contact> system_user_contacts {
            get {
                return GetRelatedEntities<Contact>("system_user_contacts", null);
            }
            set {
                SetRelatedEntities("system_user_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_email_templates")]
        public IEnumerable<Template> system_user_email_templates {
            get {
                return GetRelatedEntities<Template>("system_user_email_templates", null);
            }
            set {
                SetRelatedEntities("system_user_email_templates", null, value);
            }
        }
        
        [RelationshipSchemaName("user_accounts")]
        public IEnumerable<Account> user_accounts {
            get {
                return GetRelatedEntities<Account>("user_accounts", null);
            }
            set {
                SetRelatedEntities("user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_appnotification")]
        public IEnumerable<appnotification> user_appnotification {
            get {
                return GetRelatedEntities<appnotification>("user_appnotification", null);
            }
            set {
                SetRelatedEntities("user_appnotification", null, value);
            }
        }
        
        [RelationshipSchemaName("user_environmentvariabledefinition")]
        public IEnumerable<EnvironmentVariableDefinition> user_environmentvariabledefinition {
            get {
                return GetRelatedEntities<EnvironmentVariableDefinition>("user_environmentvariabledefinition", null);
            }
            set {
                SetRelatedEntities("user_environmentvariabledefinition", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mgs_invoice")]
        public IEnumerable<mgs_Invoice> user_mgs_invoice {
            get {
                return GetRelatedEntities<mgs_Invoice>("user_mgs_invoice", null);
            }
            set {
                SetRelatedEntities("user_mgs_invoice", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mgs_invoicecollection")]
        public IEnumerable<mgs_InvoiceCollection> user_mgs_invoicecollection {
            get {
                return GetRelatedEntities<mgs_InvoiceCollection>("user_mgs_invoicecollection", null);
            }
            set {
                SetRelatedEntities("user_mgs_invoicecollection", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mgs_product")]
        public IEnumerable<mgs_Product> user_mgs_product {
            get {
                return GetRelatedEntities<mgs_Product>("user_mgs_product", null);
            }
            set {
                SetRelatedEntities("user_mgs_product", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mgs_subscription")]
        public IEnumerable<mgs_Subscription> user_mgs_subscription {
            get {
                return GetRelatedEntities<mgs_Subscription>("user_mgs_subscription", null);
            }
            set {
                SetRelatedEntities("user_mgs_subscription", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mgs_transaction")]
        public IEnumerable<mgs_Transaction> user_mgs_transaction {
            get {
                return GetRelatedEntities<mgs_Transaction>("user_mgs_transaction", null);
            }
            set {
                SetRelatedEntities("user_mgs_transaction", null, value);
            }
        }
        
        [RelationshipSchemaName("user_task")]
        public IEnumerable<Task> user_task {
            get {
                return GetRelatedEntities<Task>("user_task", null);
            }
            set {
                SetRelatedEntities("user_task", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        [OptionSetMetadata("Read-Write", Index=0, Lcid=1033)]
        ReadWrite = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Read", Index=2, Lcid=1033)]
        Read = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Support User", Index=3, Lcid=1033)]
        SupportUser = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Non-interactive", Index=4, Lcid=1033)]
        Noninteractive = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Delegated Admin", Index=5, Lcid=1033)]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_AzureState {
        
        [EnumMember()]
        [OptionSetMetadata("Exists", Index=0, Lcid=1033)]
        Exists = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Not found or hard deleted", Index=2, Lcid=1033)]
        Notfoundorharddeleted = 2,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=0, Lcid=1033)]
        Professional = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1, Lcid=1033)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=2, Lcid=1033)]
        Basic = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Device Professional", Index=3, Lcid=1033)]
        DeviceProfessional = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Device Basic", Index=4, Lcid=1033)]
        DeviceBasic = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Essential", Index=5, Lcid=1033)]
        Essential = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Device Essential", Index=6, Lcid=1033)]
        DeviceEssential = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Enterprise", Index=7, Lcid=1033)]
        Enterprise = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Device Enterprise", Index=8, Lcid=1033)]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Sales", Index=9, Lcid=1033)]
        Sales = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=10, Lcid=1033)]
        Service = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service", Index=11, Lcid=1033)]
        FieldService = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Project Service", Index=12, Lcid=1033)]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_DeletedState {
        
        [EnumMember()]
        [OptionSetMetadata("Not deleted", Index=0, Lcid=1033)]
        Notdeleted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1, Lcid=1033)]
        Softdeleted = 1,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0, Lcid=1033)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1, Lcid=1033)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2, Lcid=1033)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3, Lcid=1033)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3, Lcid=1033)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Not Sent", Index=0, Lcid=1033)]
        InvitationNotSent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invited", Index=1, Lcid=1033)]
        Invited = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Near Expired", Index=2, Lcid=1033)]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Expired", Index=3, Lcid=1033)]
        InvitationExpired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Accepted", Index=4, Lcid=1033)]
        InvitationAccepted = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Rejected", Index=5, Lcid=1033)]
        InvitationRejected = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Revoked", Index=6, Lcid=1033)]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0, Lcid=1033)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1, Lcid=1033)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2, Lcid=1033)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mailing Address", Index=0, Lcid=1033)]
        MailingAddress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Address", Index=1, Lcid=1033)]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0, Lcid=1033)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        [OptionSetMetadata("Main Phone", Index=0, Lcid=1033)]
        MainPhone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Phone", Index=1, Lcid=1033)]
        OtherPhone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Home Phone", Index=2, Lcid=1033)]
        HomePhone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Phone", Index=3, Lcid=1033)]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum SystemUser_SystemManagedUserType {
        
        [EnumMember()]
        [OptionSetMetadata("Entra User", Index=0, Lcid=1033)]
        EntraUser = 0,
        
        [EnumMember()]
        [OptionSetMetadata("C2 User", Index=1, Lcid=1033)]
        C2User = 1,
    }
    
    [DataContract()]
    public enum SystemUser_msdyn_AgentType {
        
        [EnumMember()]
        [OptionSetMetadata("Application user", Index=0, Lcid=1033, Color="#0000ff")]
        Applicationuser = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Bot application user", Index=1, Lcid=1033, Color="#0000ff")]
        Botapplicationuser = 192350001,
    }
    
    [DataContract()]
    public enum SystemUser_msdyn_BotProvider {
        
        [EnumMember()]
        [OptionSetMetadata("Virtual Agent", Index=0, Lcid=1033, Description="CCI first party Bot", Color="#0000ff")]
        VirtualAgent = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=1, Lcid=1033, Description="Other type of bot", Color="#0000ff")]
        Other = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2, Lcid=1033, Description="Indicates that the user is not a bot", Color="#0000ff")]
        None = 192350002,
    }
    
    [DataContract()]
    public enum SystemUser_msdyn_UserType {
        
        [EnumMember()]
        [OptionSetMetadata("CRM User", Index=0, Lcid=1033, Color="#0000ff")]
        CRMUser = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("BOT User", Index=1, Lcid=1033, Color="#0000ff")]
        BOTUser = 192350001,
    }
}
