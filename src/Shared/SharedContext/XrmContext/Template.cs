//------------------------------------------------------------------------------
// <auto-generated>
//     Denne kode blev oprettet ved hjælp af et værktøj.
//     Runtime-version:4.0.30319.42000
//
//     Ændringer af denne fil kan resultere i ukorrekt funktion, og ændringerne mistes, hvis
//     koden oprettes igen.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace XrmBedrock.SharedContext {
    
    
    /// <summary>
    /// <para>Template for an email message that contains the standard attributes of an email message.</para>
    /// <para>Display Name: Email Template</para>
    /// </summary>
    [EntityLogicalName("template")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Template : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "template";
        
        public const int EntityTypeCode = 2010;
        
        public Template() : 
                base(EntityLogicalName) {
        }
        
        public Template(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("templateid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the template.</para>
        /// <para>Display Name: Email Template</para>
        /// </summary>
        [AttributeLogicalName("templateid")]
        [DisplayName("Email Template")]
        public Guid? TemplateId {
            get {
                return GetAttributeValue<Guid?>("templateid");
            }
            set {
                SetId("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>Body text of the email template.</para>
        /// <para>Display Name: Body</para>
        /// </summary>
        [AttributeLogicalName("body")]
        [DisplayName("Body")]
        public string Body {
            get {
                return GetAttributeValue<string>("body");
            }
            set {
                SetAttributeValue("body", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the email template.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the email template was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the template.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Description of the email template.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Generation Type Code</para>
        /// </summary>
        [AttributeLogicalName("generationtypecode")]
        [DisplayName("Generation Type Code")]
        [Range(0, 2147483647)]
        public int? GenerationTypeCode {
            get {
                return GetAttributeValue<int?>("generationtypecode");
            }
            set {
                SetAttributeValue("generationtypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether this component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the solution component is part of a managed solution.</para>
        /// <para>Display Name: Is Managed</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("Is Managed")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the template is personal or is available to all users.</para>
        /// <para>Display Name: Viewable By</para>
        /// </summary>
        [AttributeLogicalName("ispersonal")]
        [DisplayName("Viewable By")]
        public bool? IsPersonal {
            get {
                return GetAttributeValue<bool?>("ispersonal");
            }
            set {
                SetAttributeValue("ispersonal", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if a template is recommended by Dynamics 365.</para>
        /// <para>Display Name: Recommended</para>
        /// </summary>
        [AttributeLogicalName("isrecommended")]
        [DisplayName("Recommended")]
        public bool? IsRecommended {
            get {
                return GetAttributeValue<bool?>("isrecommended");
            }
        }
        
        /// <summary>
        /// <para>Language of the email template.</para>
        /// <para>Display Name: Language</para>
        /// </summary>
        [AttributeLogicalName("languagecode")]
        [DisplayName("Language")]
        [Range(0, 2147483647)]
        public int? LanguageCode {
            get {
                return GetAttributeValue<int?>("languagecode");
            }
            set {
                SetAttributeValue("languagecode", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the email template.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the template.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the email template was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the template.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows the number of times emails that use this template have been opened.</para>
        /// <para>Display Name: Open Count</para>
        /// </summary>
        [AttributeLogicalName("opencount")]
        [DisplayName("Open Count")]
        [Range(0, 2147483647)]
        public int? OpenCount {
            get {
                return GetAttributeValue<int?>("opencount");
            }
        }
        
        /// <summary>
        /// <para>Shows the open rate of this template. This is based on number of opens on followed emails that use this template.</para>
        /// <para>Display Name: Open Rate</para>
        /// </summary>
        [AttributeLogicalName("openrate")]
        [DisplayName("Open Rate")]
        [Range(0, 2147483647)]
        public int? OpenRate {
            get {
                return GetAttributeValue<int?>("openrate");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the template for the email activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the template.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the template.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the template.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>XML data for the body of the email template.</para>
        /// <para>Display Name: Presentation XML</para>
        /// </summary>
        [AttributeLogicalName("presentationxml")]
        [DisplayName("Presentation XML")]
        public string PresentationXml {
            get {
                return GetAttributeValue<string>("presentationxml");
            }
            set {
                SetAttributeValue("presentationxml", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the template.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows the number of times emails that use this template have received replies.</para>
        /// <para>Display Name: Reply Count</para>
        /// </summary>
        [AttributeLogicalName("replycount")]
        [DisplayName("Reply Count")]
        [Range(0, 2147483647)]
        public int? ReplyCount {
            get {
                return GetAttributeValue<int?>("replycount");
            }
        }
        
        /// <summary>
        /// <para>Shows the reply rate for this template. This is based on number of replies received on followed emails that use this template.</para>
        /// <para>Display Name: Reply Rate</para>
        /// </summary>
        [AttributeLogicalName("replyrate")]
        [DisplayName("Reply Rate")]
        [Range(0, 2147483647)]
        public int? ReplyRate {
            get {
                return GetAttributeValue<int?>("replyrate");
            }
        }
        
        /// <summary>
        /// <para>Safe html of email template.</para>
        /// <para>Display Name: Safe HTML of email template</para>
        /// </summary>
        [AttributeLogicalName("safehtml")]
        [DisplayName("Safe HTML of email template")]
        public string SafeHtml {
            get {
                return GetAttributeValue<string>("safehtml");
            }
            set {
                SetAttributeValue("safehtml", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the email template.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>XML data for the subject of the email template.</para>
        /// <para>Display Name: Subject XML</para>
        /// </summary>
        [AttributeLogicalName("subjectpresentationxml")]
        [DisplayName("Subject XML")]
        public string SubjectPresentationXml {
            get {
                return GetAttributeValue<string>("subjectpresentationxml");
            }
            set {
                SetAttributeValue("subjectpresentationxml", value);
            }
        }
        
        /// <summary>
        /// <para>Safe html of email template subject.</para>
        /// <para>Display Name: Safe HTML of email template subject</para>
        /// </summary>
        [AttributeLogicalName("subjectsafehtml")]
        [DisplayName("Safe HTML of email template subject")]
        public string SubjectSafeHtml {
            get {
                return GetAttributeValue<string>("subjectsafehtml");
            }
            set {
                SetAttributeValue("subjectsafehtml", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("templateidunique")]
        public Guid? TemplateIdUnique {
            get {
                return GetAttributeValue<Guid?>("templateidunique");
            }
        }
        
        /// <summary>
        /// <para>Type of email template.</para>
        /// <para>Display Name: Template Type</para>
        /// </summary>
        [AttributeLogicalName("templatetypecode")]
        [DisplayName("Template Type")]
        public string TemplateTypeCode {
            get {
                return GetAttributeValue<string>("templatetypecode");
            }
            set {
                SetAttributeValue("templatetypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the template.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(200)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of sent emails that use this template.</para>
        /// <para>Display Name: Sent email count</para>
        /// </summary>
        [AttributeLogicalName("usedcount")]
        [DisplayName("Sent email count")]
        [Range(0, 2147483647)]
        public int? UsedCount {
            get {
                return GetAttributeValue<int?>("usedcount");
            }
        }
        
        /// <summary>
        /// <para>Version number of the template.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: field</para>
        /// </summary>
        [AttributeLogicalName("enhancededitorhtml")]
        [DisplayName("field")]
        public string enhancededitorhtml {
            get {
                return GetAttributeValue<string>("enhancededitorhtml");
            }
            set {
                SetAttributeValue("enhancededitorhtml", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: isenhancededitorenabled</para>
        /// </summary>
        [AttributeLogicalName("isenhancededitorenabled")]
        [DisplayName("isenhancededitorenabled")]
        public bool? isenhancededitorenabled {
            get {
                return GetAttributeValue<bool?>("isenhancededitorenabled");
            }
            set {
                SetAttributeValue("isenhancededitorenabled", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_templatebase_createdby")]
        public SystemUser lk_templatebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_templatebase_createdonbehalfby")]
        public SystemUser lk_templatebase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_templatebase_modifiedby")]
        public SystemUser lk_templatebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_templatebase_modifiedonbehalfby")]
        public SystemUser lk_templatebase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_templatebase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_templatebase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_email_templates")]
        public SystemUser system_user_email_templates {
            get {
                return GetRelatedEntity<SystemUser>("system_user_email_templates", null);
            }
            set {
                SetRelatedEntity("system_user_email_templates", null, value);
            }
        }
        
        public static Template Retrieve(IOrganizationService service, Guid id, params Expression<Func<Template,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum Template_TemplateTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0, Lcid=1033)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1, Lcid=1033)]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity", Index=10, Lcid=1033)]
        Opportunity = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=4, Lcid=1033)]
        Lead = 4,
        
        [EnumMember()]
        [OptionSetMetadata("User", Index=3, Lcid=1033)]
        User = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=6, Lcid=1033)]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Contract", Index=7, Lcid=1033)]
        Contract = 1010,
        
        [EnumMember()]
        [OptionSetMetadata("Quote", Index=11, Lcid=1033)]
        Quote = 1084,
        
        [EnumMember()]
        [OptionSetMetadata("Order", Index=12, Lcid=1033)]
        Order = 1088,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=13, Lcid=1033)]
        Invoice = 1090,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=8, Lcid=1033)]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=5, Lcid=1033)]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("System Job", Index=2, Lcid=1033)]
        SystemJob = 4700,
        
        [EnumMember()]
        [OptionSetMetadata("Entitlement", Index=9, Lcid=1033)]
        Entitlement = 9700,
    }
}
