//------------------------------------------------------------------------------
// <auto-generated>
//     Denne kode blev oprettet ved hjælp af et værktøj.
//     Runtime-version:4.0.30319.42000
//
//     Ændringer af denne fil kan resultere i ukorrekt funktion, og ændringerne mistes, hvis
//     koden oprettes igen.
// </auto-generated>
//------------------------------------------------------------------------------

using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;


namespace XrmBedrock.SharedContext {
    
    
    /// <summary>
    /// <para>This table contains records of invoice information</para>
    /// <para>Display Name: Invoice</para>
    /// </summary>
    [EntityLogicalName("mgs_invoice")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class mgs_Invoice : ExtendedEntity<mgs_InvoiceState, mgs_Invoice_statuscode> {
        
        public const string EntityLogicalName = "mgs_invoice";
        
        public const int EntityTypeCode = 11144;
        
        public mgs_Invoice() : 
                base(EntityLogicalName) {
        }
        
        public mgs_Invoice(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("mgs_invoice1");
            }
        }
        
        [AttributeLogicalName("mgs_invoiceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("mgs_invoiceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Invoice</para>
        /// </summary>
        [AttributeLogicalName("mgs_invoiceid")]
        [DisplayName("Invoice")]
        public Guid? mgs_InvoiceId {
            get {
                return GetAttributeValue<Guid?>("mgs_invoiceid");
            }
            set {
                SetId("mgs_invoiceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Invoice</para>
        /// </summary>
        [AttributeLogicalName("mgs_invoice1")]
        [DisplayName("Invoice")]
        [MaxLength(850)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("mgs_invoice1");
            }
            set {
                SetAttributeValue("mgs_invoice1", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("mgs_contact")]
        [DisplayName("Contact")]
        public EntityReference mgs_Contact {
            get {
                return GetAttributeValue<EntityReference>("mgs_contact");
            }
            set {
                SetAttributeValue("mgs_contact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Invoice</para>
        /// </summary>
        [AttributeLogicalName("mgs_invoice1")]
        [DisplayName("Invoice")]
        [MaxLength(850)]
        public string mgs_Invoice1 {
            get {
                return GetAttributeValue<string>("mgs_invoice1");
            }
            set {
                SetAttributeValue("mgs_invoice1", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Invoice Collection</para>
        /// </summary>
        [AttributeLogicalName("mgs_invoicecollection")]
        [DisplayName("Invoice Collection")]
        public EntityReference mgs_InvoiceCollection {
            get {
                return GetAttributeValue<EntityReference>("mgs_invoicecollection");
            }
            set {
                SetAttributeValue("mgs_invoicecollection", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Invoice Date</para>
        /// </summary>
        [AttributeLogicalName("mgs_invoicedate")]
        [DisplayName("Invoice Date")]
        public DateTime? mgs_InvoiceDate {
            get {
                return GetAttributeValue<DateTime?>("mgs_invoicedate");
            }
            set {
                SetAttributeValue("mgs_invoicedate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Total Amount</para>
        /// </summary>
        [AttributeLogicalName("mgs_totalamount")]
        [DisplayName("Total Amount")]
        public decimal? mgs_TotalAmount {
            get {
                return GetMoneyValue("mgs_totalamount");
            }
            set {
                SetMoneyValue("mgs_totalamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Amount in base currency.</para>
        /// <para>Display Name: Total Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("mgs_totalamount_base")]
        [DisplayName("Total Amount (Base)")]
        public decimal? mgs_totalamount_Base {
            get {
                return GetMoneyValue("mgs_totalamount_base");
            }
        }
        
        /// <summary>
        /// <para>Status of the Invoice</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public mgs_InvoiceState? statecode {
            get {
                return GetOptionSetValue<mgs_InvoiceState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Invoice</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public mgs_Invoice_statuscode? statuscode {
            get {
                return GetOptionSetValue<mgs_Invoice_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_mgs_invoice_createdby")]
        public SystemUser lk_mgs_invoice_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mgs_invoice_createdby", null);
            }
            set {
                SetRelatedEntity("lk_mgs_invoice_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_mgs_invoice_createdonbehalfby")]
        public SystemUser lk_mgs_invoice_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mgs_invoice_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_mgs_invoice_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_mgs_invoice_modifiedby")]
        public SystemUser lk_mgs_invoice_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mgs_invoice_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_mgs_invoice_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_mgs_invoice_modifiedonbehalfby")]
        public SystemUser lk_mgs_invoice_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mgs_invoice_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_mgs_invoice_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("mgs_invoice_Annotations")]
        public IEnumerable<Annotation> mgs_invoice_Annotations {
            get {
                return GetRelatedEntities<Annotation>("mgs_invoice_Annotations", null);
            }
            set {
                SetRelatedEntities("mgs_invoice_Annotations", null, value);
            }
        }
        
        [AttributeLogicalName("mgs_contact")]
        [RelationshipSchemaName("mgs_invoice_Contact_contact")]
        public Contact mgs_invoice_Contact_contact {
            get {
                return GetRelatedEntity<Contact>("mgs_invoice_Contact_contact", null);
            }
            set {
                SetRelatedEntity("mgs_invoice_Contact_contact", null, value);
            }
        }
        
        [AttributeLogicalName("mgs_invoicecollection")]
        [RelationshipSchemaName("mgs_invoice_InvoiceCollection_mgs_invoicecollection")]
        public mgs_InvoiceCollection mgs_invoice_InvoiceCollection_mgs_invoicecollection {
            get {
                return GetRelatedEntity<mgs_InvoiceCollection>("mgs_invoice_InvoiceCollection_mgs_invoicecollection", null);
            }
            set {
                SetRelatedEntity("mgs_invoice_InvoiceCollection_mgs_invoicecollection", null, value);
            }
        }
        
        [RelationshipSchemaName("mgs_transaction_Invoice_mgs_invoice")]
        public IEnumerable<mgs_Transaction> mgs_transaction_Invoice_mgs_invoice {
            get {
                return GetRelatedEntities<mgs_Transaction>("mgs_transaction_Invoice_mgs_invoice", null);
            }
            set {
                SetRelatedEntities("mgs_transaction_Invoice_mgs_invoice", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_mgs_invoice")]
        public SystemUser user_mgs_invoice {
            get {
                return GetRelatedEntity<SystemUser>("user_mgs_invoice", null);
            }
            set {
                SetRelatedEntity("user_mgs_invoice", null, value);
            }
        }
        
        public static mgs_Invoice Retrieve(IOrganizationService service, Guid id, params Expression<Func<mgs_Invoice,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [DataContract()]
    public enum mgs_InvoiceState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum mgs_Invoice_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Lcid=1033)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1, Lcid=1033)]
        Inactive = 2,
    }
}
